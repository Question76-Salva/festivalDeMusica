{"version":3,"sources":["app.js","galeria.js"],"names":["navegacionFija","barra","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","enlace","addEventListener","e","preventDefault","target","attributes","href","value","scrollIntoView","behavior","crearGaleria","galeria","i","imagen","createElement","src","dataset","imagenId","onclick","mostrarImagen","lista","appendChild","id","parseInt","overlay","body","cerrarImagen","textContent"],"mappings":"AAYA,SAAAA,iBAEA,MAAAC,EAAAC,SAAAC,cAAA,WAGA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAL,EAAAM,UAAAC,OAAA,QAEAP,EAAAM,UAAAE,IAAA,WAKAC,QAAAR,SAAAC,cAAA,oBAGA,SAAAQ,YAIAT,SAAAU,iBAAA,2BAIAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBAMAf,SAAAC,cAAAa,EAAAE,OAAAC,WAAAC,KAAAC,OAEAC,eAAA,CACAC,SAAA,iBC1CA,SAAAC,eACA,MAAAC,EAAAvB,SAAAC,cAAA,qBAIA,IAAA,IAAAuB,EAAA,EAAAA,GAAA,GAAAA,IAAA,CAGA,MAAAC,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SAGAC,EAAAG,QAAAC,SAAAL,EAGAC,EAAAK,QAAAC,cAGA,MAAAC,EAAAhC,SAAA0B,cAAA,MAGAM,EAAAC,YAAAR,GAGAF,EAAAU,YAAAD,IAIA,SAAAD,cAAAjB,GAMA,MAAAoB,EAAAC,SAAArB,EAAAE,OAAAY,QAAAC,UAGAJ,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SAGA,MAAAE,EAAApC,SAAA0B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAA/B,UAAAE,IAAA,WAGA6B,EAAAN,QAAA,WACAM,EAAA9B,SACA+B,EAAAhC,UAAAC,OAAA,eAIA,MAAAgC,EAAAtC,SAAA0B,cAAA,KACAY,EAAAC,YAAA,IACAD,EAAAjC,UAAAE,IAAA,cAGA+B,EAAAR,QAAA,WACAM,EAAA9B,UAIA8B,EAAAH,YAAAK,GAGA,MAAAD,EAAArC,SAAAC,cAAA,QACAoC,EAAAJ,YAAAG,GACAC,EAAAhC,UAAAE,IAAA,cDnEAP,SAAAa,iBAAA,oBAAA,WACAJ,eCLAT,SAAAa,iBAAA,oBAAA,WACAS","file":"bundle.js","sourcesContent":["//* ============================\r\n//* === efecto smooth scroll ===\r\n//* ============================\r\n\r\n//* == cuando esté listo el documento ejecutamos la función ==\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    scrollNav();\r\n\r\n    //navegacionFija();\r\n})\r\n\r\nfunction navegacionFija() {\r\n\r\n    const barra = document.querySelector('.header');\r\n\r\n    // registrar el intersection observer\r\n    const observer = new IntersectionObserver( function(entries) {\r\n        if(entries[0].isIntersecting) {\r\n            barra.classList.remove('fijo');\r\n        } else {\r\n            barra.classList.add('fijo');\r\n        }\r\n    });\r\n\r\n    // elemento a observar\r\n    observer.observe(document.querySelector('.sobre-festival'));\r\n}\r\n\r\nfunction scrollNav() {\r\n\r\n    //* === capturar enlaces ===\r\n\r\n    const enlaces = document.querySelectorAll('.navegacion-principal a');\r\n\r\n    //* === iterar por cada enlace ===\r\n\r\n    enlaces.forEach( function(enlace) {\r\n        enlace.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n\r\n            //console.log(e.target.attributes.href.value);\r\n\r\n            //* === guarda donde estamos dando click === \r\n\r\n            const seccion = document.querySelector(e.target.attributes.href.value);\r\n\r\n            seccion.scrollIntoView({\r\n                behavior: 'smooth',\r\n            });\r\n        });\r\n    });\r\n\r\n    \r\n}","//* === DOMContentLoaded -> esperar hasta que todo el documento esté listo, que el html se haya descargado === \r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    crearGaleria();\r\n});\r\n\r\nfunction crearGaleria() {\r\n    const galeria = document.querySelector('.galeria-imagenes');\r\n\r\n    //* === seleccionar todas las imagenes para la galería, desde la 1 hasta la 12 ===\r\n\r\n    for(let i = 1; i <= 12; i++) {\r\n\r\n        //* === generar la imagen ===\r\n        const imagen = document.createElement('IMG');\r\n        imagen.src = `build/img/thumb/${i}.webp`;\r\n\r\n        //* === crear atributo personalizado en html para referenciar cada imagen ===\r\n        imagen.dataset.imagenId = i;\r\n\r\n        //* === añadir la función de \"mostrarImagen\" ===\r\n        imagen.onclick = mostrarImagen;\r\n\r\n        //* === generar la lista ===\r\n        const lista = document.createElement('LI');\r\n\r\n        //* === agregar la imagen a la lista ===\r\n        lista.appendChild(imagen);\r\n\r\n        //* === agregar los \"li\" a la galería ===\r\n        galeria.appendChild(lista);\r\n    }\r\n}\r\n\r\nfunction mostrarImagen(e) {\r\n\r\n    //* === devuelve id de imagen, en string === \r\n    //console.log(typeof e.target.dataset.imagenId);\r\n\r\n    //* === convertir string a number ===\r\n    const id = parseInt(e.target.dataset.imagenId);     \r\n    \r\n    //* === crear una imagen ===\r\n    const imagen = document.createElement('IMG');\r\n    imagen.src = `build/img/grande/${id}.webp`;\r\n\r\n    //* === crear un div y agregar la imagen ===\r\n    const overlay = document.createElement('DIV');\r\n    overlay.appendChild(imagen);\r\n    overlay.classList.add('overlay');\r\n\r\n    //* === cuando se da click, cerrar la imagen ===\r\n    overlay.onclick = function() {\r\n        overlay.remove();\r\n        body.classList.remove('fijar-body');\r\n    } \r\n\r\n    //* === botón para cerrar la imagen ===\r\n    const cerrarImagen = document.createElement('P');\r\n    cerrarImagen.textContent = 'X';\r\n    cerrarImagen.classList.add('btn-cerrar');  \r\n\r\n    //* === cuando se presiona, se cierra la imagen ===\r\n    cerrarImagen.onclick = function() {\r\n        overlay.remove();\r\n    }\r\n\r\n    //* === agrearlo al overlay ===\r\n    overlay.appendChild(cerrarImagen);\r\n\r\n    //* === mostrarlo en el html ===\r\n    const body = document.querySelector('body');\r\n    body.appendChild(overlay);\r\n    body.classList.add('fijar-body');\r\n}"]}